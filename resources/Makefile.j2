MAKEFLAGS 				+= --warn-undefined-variables
SHELL 					:= bash
.DEFAULT_GOAL			:= help
URIBASE					:=	http://purl.obolibrary.org/obo
TMP_DATA				:=	{{ directories.tmp }}
ROOT_DIR				:=	$(shell pwd)
PHENOTYPE_DIR			:= $(ROOT_DIR)/data/phenotype
RUNNERS_DIR				:= $(ROOT_DIR)/runners
NAME					:= $(shell python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["tool"]["poetry"]["name"])')
VERSION					:= $(shell python -c 'import tomli; print(tomli.load(open("pyproject.toml", "rb"))["tool"]["poetry"]["version"])')

help: info
	@echo ""
	@echo "help"
	@echo "make pheval -- this runs the entire pipeline including corpus preparation and pheval run"
	@echo "make semsim -- generate all configured similarity profiles"
	@echo "make semsim-shuffle -- generate new ontology terms to the semsim process"
	@echo "make semsim-scramble -- scramble semsim profile"
	@echo "make semsim-convert -- convert all semsim profiles into exomiser SQL format"
	@echo "make semsim-ingest -- takes all the configured semsim profiles and loads them into the exomiser databases"

	@echo "make clean -- removes corpora and pheval results"
	@echo "make help -- show this help"
	@echo ""

info:
	@echo "Project: $(NAME)"
	@echo "Version: $(VERSION)"

.PHONY: prepare-inputs

{%- for config in configs %}
prepare-inputs: configurations/{{ config.tool }}-{{ config.version }}-{{ config.configuration }}/config.yaml

configurations/{{ config.tool }}-{{ config.version }}-{{ config.configuration }}/config.yaml:
	mkdir -p $(ROOT_DIR)/$(shell dirname $@)/
	{% set toolversion = config.tool ~ "-" ~ config.version %}
	cp -rf $(PHENOTYPE_DIR)/{{ phenotype.version }}_phenotype $(ROOT_DIR)/$(shell dirname $@)/{{ phenotype.version }}_phenotype
	ln -s $(PHENOTYPE_DIR)/{{ phenotype.version }}_hg19 $(ROOT_DIR)/$(shell dirname $@)/
	ln -s $(PHENOTYPE_DIR)/{{ phenotype.version }}_hg38 $(ROOT_DIR)/$(shell dirname $@)/
	ln -s $(RUNNERS_DIR)/{{ config.tool }}-{{ config.version }}/* $(ROOT_DIR)/$(shell dirname $@)/



{% endfor %}
.PHONY: prepare-corpora

{% for run in runs %}
results/{{ run.tool }}-{{ run.version }}/{{ run.corpus }}-{{ run.corpusvariant }}-{{run.configuration}}/results.yml: configurations/{{ run.tool }}-{{ run.version }}-{{ run.configuration }}/config.yaml corpora/{{ run.corpus }}/{{ run.corpusvariant }}/corpus.yml
	rm -rf $(ROOT_DIR)/$(shell dirname $@)
	mkdir -p $(ROOT_DIR)/$(shell dirname $@)
	pheval run \
	 --input-dir $(ROOT_DIR)/configurations/{{ run.tool }}-{{ run.version }}-{{run.configuration}} \
	 --testdata-dir $(ROOT_DIR)/corpora/{{ run.corpus }}/{{ run.corpusvariant }} \
	 --runner {{ run.tool }}phevalrunner \
	 --tmp-dir {{ directories.tmp }}/ \
	 --version {{ run.version }} \
	 --output-dir $(ROOT_DIR)/$(shell dirname $@)

	touch $@

.PHONY: run-{{ run.tool }}-{{ run.version }}-{{ run.corpus }}-{{ run.corpusvariant }}

run-{{ run.tool }}-{{ run.version }}-{{ run.corpus }}-{{ run.corpusvariant }}-{{ run.configuration }}:
	$(MAKE) results/{{ run.tool }}-{{ run.version }}/{{ run.corpus }}-{{ run.corpusvariant }}-{{run.configuration}}/results.yml


pheval-run: run-{{ run.tool }}-{{ run.version }}-{{ run.corpus }}-{{ run.corpusvariant }}-{{ run.configuration }}

{% endfor %}


{% for corpus in corpora %}

{% for scrambled in corpus.scrambled %}
corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/corpus.yml: corpora/{{ corpus.id }}/default/corpus.yml $(ROOT_DIR)/testdata/template_vcf/template_exome_hg19.vcf.gz
	test -d $(ROOT_DIR)/corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/ || mkdir -p $(ROOT_DIR)/corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/
	test -L $(ROOT_DIR)/corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/template_exome_hg19.vcf.gz || ln -s $(ROOT_DIR)/testdata/template_vcf/template_exome_hg19.vcf.gz $(ROOT_DIR)/corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/template_exome_hg19.vcf.gz

	pheval-utils create-spiked-vcfs \
	 --template-vcf-path $(ROOT_DIR)/corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/template_exome_hg19.vcf.gz  \
	 --phenopacket-dir=$(shell dirname $<)/phenopackets \
	 --output-dir $(ROOT_DIR)/$(shell dirname $@)/vcf

	test -d $(shell dirname $@)/phenopackets || mkdir -p $(shell dirname $@)/phenopackets
	pheval-utils scramble-phenopackets \
	 --scramble-factor {{ scrambled.factor }} \
	 --output-dir $(ROOT_DIR)/$(shell dirname $@)/phenopackets \
	 --phenopacket-dir=$(shell dirname $<)/phenopackets

	touch $@

prepare-corpora: corpora/{{ corpus.id }}/scrambled-{{ scrambled.factor }}/corpus.yml

{% endfor %}

{% for custom_corpus in corpus.custom_variants %}
corpora/{{ corpus.id }}/{{ custom_corpus.id }}/corpus.yml: $(ROOT_DIR)/testdata/template_vcf/template_exome_hg19.vcf.gz
	echo "error $@ needs to be configured manually" && false
{% endfor %}

{% endfor %}

.PHONY: pheval
pheval:
	$(MAKE) prepare-inputs
	$(MAKE) prepare-corpora
	$(MAKE) pheval-run

include ./resources/custom.Makefile
